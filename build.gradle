plugins {
    id 'java-library'
    id 'maven-publish'

    id 'com.github.johnrengelman.shadow' version '2.0.1'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'nebula.release' version '6.0.0'
    id 'net.ltgt.errorprone' version '0.0.13'
}

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    implementation 'com.google.guava:guava:23.4-jre'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    implementation 'com.google.errorprone:error_prone_annotations:2.1.2'

    testImplementation 'org.testng:testng:6.11'
    testImplementation 'com.google.truth:truth:0.37'
    testImplementation 'com.google.truth.extensions:truth-java8-extension:0.37'
}

test {
    useTestNG()
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

shadowJar {
    dependencies {
        include(dependency('com.google.guava:guava:23.4-jre'))
    }
    relocate 'com.google', 'com.tripadvisor.reflow.repackage.com.google'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

javadoc {
    title 'Reflow API'
}

def pomConfig = {
    licenses {
        license {
            name "The Apache License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Graph-based workflows with checkpointing')
                root.appendNode('name', 'Reflow')
                root.appendNode('url', 'https://github.com/tripadvisor/reflow/')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    publications = ['mavenJava']

    pkg {
        repo = 'reflow'
        name = 'reflow'
        userOrg = 'tripadvisor'
        version {
            name = project.version
            vcsTag = 'v' + project.version
        }
    }
}
